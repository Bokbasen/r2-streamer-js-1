  'cson2json': '
    node node_modules/cson/bin/cson2json
      package-scripts.cson &&
    echo ""
  '

  '_pregitdist': '
    npm run build:all
  '

  'gitdist': '
    cd ../r2-streamer-js-dist/ &&
    git status ||
    echo status &&
    (rimraf "*" && echo rimrafOK) ||
    echo rimrafNOK &&
    cpy ../r2-streamer-js/package.json . &&
    cpy ../r2-streamer-js/package-lock.json . &&
    cpy ../r2-streamer-js/LICENSE . &&
    cpy ../r2-streamer-js/README.md . &&
    cpy "docs/**/*.*" ../r2-streamer-js-dist/ --cwd=../r2-streamer-js/ --parents &&
    cpy "dist/**/*.*" ../r2-streamer-js-dist/ --cwd=../r2-streamer-js/ --parents &&
    git add * ||
    echo add &&
    git commit -a -m "add new dist" ||
    echo commit &&
    git push ||
    echo push &&
    git status ||
    echo status &&
    cd ..
  '

  'start': '
    cross-env DEBUG=r2:*
    node
    "./dist/es6-es2015/src/http/server-cli.js"
    ./misc/epubs/
  '

  'prepare_': '
    npm run build:all &&
    npm test
  '

  'prepublish_': '
    npm run prepare_
  '

  'prenow': '
    npm run clean &&
    npm run build:es8-es2017
  '

  'now': '
    cpy package-lock.json ./now &&
    cpy "**/*.*" ../now/ --cwd=./dist --parents &&
    rimraf "./now/**/*.d.ts" &&
    rimraf "./now/**/*.js.map" &&
    cpy "misc/readers/reader-NYPL/**/*.*" ./now/ --cwd=./ --parents &&
    cpy "misc/readers/reader-HADRIEN/**/*.*" ./now/ --cwd=./ --parents &&
    cpy "misc/epubs/*.epub" now/misc/epubs/ &&
    cpy package-now.json now/ &&
    cd now/ &&
    mv package-now.json package.json &&
    now &&
    cd ..
  '

  'typescript:imports': '
    node tools/typescript_relativize_path_mapping_imports.js
  '

  'gitrev': '
    node tools/gitrev.js &&
    cat dist/gitrev.json
  '

  'afterdist': '
    npm run typescript:imports &&
    npm run gitrev
  '

  'prebuild': '
    npm run lint
  '

  'build': '
    npm run transpile:typescript
  '

  'postbuild': '
    npm run afterdist
  '

  'prebuild:all': '
    npm run lint
  '

  'build:all': '
    npm run transpile:typescript:all
  '

  'postbuild:all': '
    npm run afterdist
  '

  'prebuild:es5': '
    npm run lint &&
    npm run clean
  '

  'build:es5': '
    npm run transpile:typescript:es5
  '

  'postbuild:es5': '
    npm run afterdist
  '

  'prebuild:es6-es2015': '
    npm run lint &&
    npm run clean
  '

  'build:es6-es2015': '
    npm run transpile:typescript:es6-es2015
  '

  'postbuild:es6-es2015': '
    npm run afterdist
  '

  'prebuild:es7-es2016': '
    npm run lint &&
    npm run clean
  '

  'build:es7-es2016': '
    npm run transpile:typescript:es7-es2016
  '

  'postbuild:es7-es2016': '
    npm run afterdist
  '

  'prebuild:es8-es2017': '
    npm run lint &&
    npm run clean
  '

  'build:es8-es2017': '
    npm run transpile:typescript:es8-es2017
  '

  'postbuild:es8-es2017': '
    npm run afterdist
  '

  'clean': '
    rimraf ./dist &&
    rimraf ./now &&
    mkdirp ./dist
  '

  'lint': '
    npm run lint:all &&
    npm run lint:typescript:full
  '

  'lint:all': '
    eclint
      check
      "**/*"
      "!**/*.node"
      "!.git/**/*"
      "!node_modules*/**/*"
      "!dist/**/*"
      "!misc/**/*"
      "!now/**/*"
      "!.vscode/**/*"
      "!.history/**/*"
      "!**/.DS_Store"
      "!**/*.epub"
      "!**/*.cbz"
      "!**/*.jpg"
      "!**/*.jpeg"
      "!**/*.png"
      "!**/*.log"
  '

  'lint:typescript': '
    tslint
      -c
      "./tslint.json"
      "./src/**/*.ts"
      "./test/**/*.ts"
  '

  'lint:typescript:full': '
    tslint
      --project
      "./tsconfig.json"
      -c
      "./tslint.json"
      "./src/**/*.ts"
      "./test/**/*.ts"
  '

  'lintfix': '
    sed
      -i
      ""
      "s/let normalizedPath = path\\.normalize(documentPath);/let normalizedPath = path.normalize(documentPath).toLowerCase();/g"
      ./node_modules/tslint-language-service/out/src/index.js
  '

  'pretranspile:typescript': '
    npm run clean
  '

  'transpile:typescript': '
    tsc -p "./tsconfig.json"
  '

  'pretranspile:typescript:all': '
    npm run clean
  '

  'transpile:typescript:all': '
    npm run transpile:typescript:es5 &&
    npm run transpile:typescript:es6-es2015 &&
    npm run transpile:typescript:es7-es2016 &&
    npm run transpile:typescript:es8-es2017
  '

  'transpile:typescript:es5': '
    tsc -p "./tsconfigs/tsconfig-es5-all.json"
  '

  'transpile:typescript:es6-es2015': '
    tsc -p "./tsconfigs/tsconfig-es6-es2015-all.json"
  '

  'transpile:typescript:es7-es2016': '
    tsc -p "./tsconfigs/tsconfig-es7-es2016-all.json"
  '

  'transpile:typescript:es8-es2017': '
    tsc -p "./tsconfigs/tsconfig-es8-es2017-all.json"
  '

  'transpile:typescript:es8-es2017+afterdist': '
    npm run transpile:typescript:es8-es2017 &&
    npm run afterdist
  '

  'transpile:typescript:single': '
    node tools/typescript_compile_single.js
  '

  'posttranspile:typescript:single': '
    npm run afterdist
  '

  'test': '
    cross-env DEBUG=r2:*
    ava
      --verbose
      --fail-fast
      --serial
      --color
      "./dist/es8-es2017/test/**/test*.js"
  '

  'cli': '
    node "./dist/es8-es2017/src/_utils/cli.js"
  '

  'cli-debug': '
    cross-env DEBUG=r2:*
    npm run cli
  '

  'cli-debug-x': '
    cross-env DEBUG=*
    npm run cli
  '

  'server': '
    node "./dist/es8-es2017/src/http/server-cli.js"
  '

  'server-debug': '
    cross-env DEBUG=r2:*
    npm run server
  '

  'server-debug-x': '
    cross-env DEBUG=*
    npm run server
  '

  'heroku-prebuild': '
    echo "heroku-prebuild"
  '

  'heroku-postbuild': '
    echo "heroku-postbuild" &&
    npm run clean &&
    npm run transpile:typescript:es8-es2017 &&
    npm run typescript:imports &&
    curl
      -s
      -o ./dist/gitrev.json
      https://rawgit.com/edrlab/r2-streamer-js-dist/master/dist/gitrev.json &&
    ls ./dist
  '
